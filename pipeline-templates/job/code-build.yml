parameters:
  SolutionBaseName:
  BuildConfiguration:

jobs:
- job: BuildMyApprenticeship
  displayName: Build MyApprenticeship App for iOS
  pool:
    vmImage: 'macOS-latest'
    demands:
      - MSBuild
  variables:
    - group: BUILD Management Resources 
  steps:
    - task: InstallAppleCertificate@2
      inputs:
        certSecureFile: '$(AppleCertificate)' 
        certPwd: '$(iOSCertPassword)'
        keychain: 'temp'

    - task: InstallAppleProvisioningProfile@1
      inputs:
        provisioningProfileLocation: 'secureFiles'
        provProfileSecureFile: '$(ProvisioningProfile)' 

    - task: UseDotNet@2
      displayName: .NET Version
      inputs:
        packageType: 'sdk'
        version: '8.x'

    - task: Bash@3
      displayName: Install MAUI Workload
      inputs:
        targetType: 'inline'
        script: |
          dotnet nuget locals all --clear
          dotnet workload install maui-ios --source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet8/nuget/v3/index.json --source https://api.nuget.org/v3/index.json

    - task: Bash@3
      displayName: Restore NuGet Packages
      inputs:
        targetType: 'inline'
        script: |
          cd src
          dotnet restore $(SolutionBaseName).sln

    - task: Bash@3
      displayName: List Directory Contents
      inputs:
        targetType: 'inline'
        script: |
          echo "Listing all files in the repository:"
          ls -R
     
    - task: DotNetCoreCLI@2
      displayName: Build iOS App
      inputs:
        command: 'publish'
        projects: 'src/$(SolutionBaseName).sln'
        arguments: >
          -f:net8.0-ios
          -c:${{ parameters.BuildConfiguration }}
          -p:BuildIpa=True
          -p:CodesignProvision=/workspaces/das-apprentice-app-wrapper-ios/src/MyApprenticeship/My_Apprenticeship_Pilot.mobileprovision
          -p:CodesignKey="Apple Distribution: YourName (TEAMID)"

    - task: CopyFiles@2
      inputs:
        Contents: |
          **/*.ipa
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop_ios'
        publishLocation: 'Container'
