parameters:
  SolutionBaseName: 'myapprenticeship' # Your solution/project name
  BuildConfiguration: 'Release' # Build configuration

jobs:
- job: BuildiOSApp
  displayName: Build iOS MAUI App
  pool:
    vmImage: 'macOS-latest'
    workspace:
      clean: all
  variables:
  - group: BUILD Management Resources # Variable group containing sensitive values (e.g., CertPassword)
  steps:
  - template: azure-pipelines-templates/build/step/gitversion.yml@das-platform-building-blocks
  - template: azure-pipelines-templates/build/step/ios-app-build.yml@das-platform-building-blocks
    parameters:
      ContinueOnVulnerablePackageScanError: true  
  
  # Install the Apple Certificate
  - task: InstallAppleCertificate@2
    displayName: Install Apple Certificate
    inputs:
      certSecureFile: 'CGCertificates.p12' # Name of your certificate in Secure Files
      certPwd: '$(CertPassword)' # Cert password from variable group
      keychain: 'temp'
      removeCertsAfterBuild: true

  # Install the Provisioning Profile
  - task: InstallAppleProvisioningProfile@1
    displayName: Install Provisioning Profile
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: 'My_Apprenticeship_Pilot.mobileprovision' # Name of your provisioning profile in Secure Files

  # Restore .NET dependencies
  - task: DotNetCoreCLI@2
    displayName: Restore Dependencies
    inputs:
      command: restore
      projects: src/${{ parameters.SolutionBaseName }}/${{ parameters.SolutionBaseName }}.sln

  # Build the project
  - task: DotNetCoreCLI@2
    displayName: Build Solution
    inputs:
      command: build
      projects: src/${{ parameters.SolutionBaseName }}/${{ parameters.SolutionBaseName }}.sln
      arguments: '-c ${{ parameters.BuildConfiguration }}'

  # Publish the app for iOS
  - task: Bash@3
    displayName: Publish iOS App
    inputs:
      targetType: 'inline'
      script: |
        cd src/${{ parameters.SolutionBaseName }}
        dotnet publish ${{ parameters.SolutionBaseName }}.csproj \
          -c ${{ parameters.BuildConfiguration }} \
          -f net8.0-ios \
          -p:ArchiveOnBuild=true \
          -p:ProvisioningProfile="My_Apprenticeship_Pilot.mobileprovision" \
          -p:SigningIdentity="Apple Distribution"

  # Copy the IPA file to the artifact staging directory
  - task: CopyFiles@2
    displayName: Copy IPA to Artifacts
    inputs:
      Contents: '**/*.ipa'
      TargetFolder: '$(build.artifactstagingdirectory)/ios'
      OverWrite: true

  # Publish the artifact
  - task: PublishPipelineArtifact@1
    displayName: Publish iOS IPA Artifact
    inputs:
      targetPath: '$(build.artifactstagingdirectory)/ios'
      artifactName: 'iOS_Build'
