parameters:
  SolutionBaseName:
  BuildConfiguration:

jobs:
- job: CodeBuild
  pool:
    vmImage: 'macOS-latest'
    workspace:
      clean: all
  variables:
  - group: BUILD Management Resources
  steps:
  - template: azure-pipelines-templates/build/step/gitversion.yml@das-platform-building-blocks

  # - task: DotNetCoreCLI@2
  #   displayName: Install Workloads
  #   inputs:
  #     command: custom
  #     custom: workload
  #     arguments: install maui ios maui-tizen --skip-manifest-update

  - template: azure-pipelines-templates/build/step/ios-app-build.yml@das-platform-building-blocks
    parameters:
      ContinueOnVulnerablePackageScanError: true

  - task: DotNetCoreCLI@2
    displayName: Publish - dotnet publish ${{ parameters.SolutionBaseName }} for iOS
    inputs:
      command: publish
      publishWebProjects: false
      projects: src/${{ parameters.SolutionBaseName }}/${{ parameters.SolutionBaseName }}.csproj
      arguments: -o $(build.artifactstagingdirectory)/publish -c ${{ parameters.BuildConfiguration }} -f net8.0-ios --no-build
      modifyOutputPath: true
      zipAfterPublish: true

  - task: CopyFiles@2
    displayName: Copy Files to $(build.artifactstagingdirectory)/publish
    inputs:
      Contents: |
        azure/**
      TargetFolder: $(build.artifactstagingdirectory)/publish
      OverWrite: true

  - task: PublishPipelineArtifact@1
    displayName: Publish Build Artifact
    inputs:
      targetPath: $(build.artifactstagingdirectory)/publish
      artifactName: ${{ parameters.SolutionBaseName }}