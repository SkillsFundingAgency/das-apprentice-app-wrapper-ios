parameters:
  SolutionBaseName:
  BuildConfiguration:

jobs:
- job: CodeBuild
  pool:
    vmImage: 'macOS-latest'
    workspace:
      clean: all
  variables:
  - group: BUILD Management Resources
  steps:
  - template: azure-pipelines-templates/build/step/gitversion.yml@das-platform-building-blocks
  - template: azure-pipelines-templates/build/step/ios-app-build.yml@das-platform-building-blocks
    parameters:
      ContinueOnVulnerablePackageScanError: true

  # Install the Apple Certificate
  - task: InstallAppleCertificate@2
    displayName: Install Apple Certificate
    inputs:
      certSecureFile: 'CGCertificates.p12'
      certPwd: '$(CertPassword)'
      keychain: 'temp'
      removeCertsAfterBuild: true

  # Install the Provisioning Profile
  - task: InstallAppleProvisioningProfile@1
    displayName: Install Provisioning Profile
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: 'My_Apprenticeship_Pilot.mobileprovision'

  # # Publish the iOS app
  # - task: DotNetCoreCLI@2
  #   displayName: Publish - dotnet publish ${{ parameters.SolutionBaseName }} for iOS
  #   inputs:
  #     command: publish
  #     publishWebProjects: false
  #     projects: src/${{ parameters.SolutionBaseName }}/${{ parameters.SolutionBaseName }}.csproj
  #     arguments: >
  #       -o $(build.artifactstagingdirectory)/publish
  #       -c ${{ parameters.BuildConfiguration }}
  #       -f net8.0-ios
  #       --no-build
  #       /p:SigningIdentity="Apple Distribution"
  #       /p:ProvisioningProfile="My_Apprenticeship_Pilot.mobileprovision"
  #     modifyOutputPath: true
  #     zipAfterPublish: true
  
  # Publish the iOS app
  - task: Bash@3
    displayName: Publish iOS app
    inputs:
      targetType: 'inline'
      script: |
        cd src
        dotnet publish -f net8.0-ios -c Release -v d -p:ArchiveOnBuild=true -p:Environment='Prod' -p:Distribute=true

  # Copy files to artifact staging directory
  - task: CopyFiles@2
    displayName: Copy artifacts
    inputs:
      Contents: |
        azure/**
        **/*.ipa
      TargetFolder: $(build.artifactstagingdirectory)/publish
      OverWrite: true

  # Publish pipeline artifact
  - task: PublishBuildArtifacts@1
    displayName: Publish Build Artifact
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)/publish
      ArtifactName: ${{ parameters.SolutionBaseName }}